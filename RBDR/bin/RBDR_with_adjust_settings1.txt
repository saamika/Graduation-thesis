## RBDR settings for the simulation### Scenario settings#src/core/Setting.javaの中でシナリオファイル名を指定Scenario.name = RBDR_with_adjusting_node1Scenario.simulateConnections = trueScenario.updateInterval = 0.1# 43200s == 12hScenario.endTime = 43200## Interface-specific settings:# type : which interface class the interface belongs to# For different types, the sub-parameters are interface-specific# For SimpleBroadcastInterface, the parameters are:# transmitSpeed : transmit speed of the interface (bytes per second) # transmitRange : range of the interface (meters)# "Bluetooth" interface for all nodesbtInterface.type = SimpleBroadcastInterface#　伝送速度# Transmit speed of 2 Mbps = 250kBpsbtInterface.transmitSpeed = 250k# 通信範囲：ドローンなので30mを想定btInterface.transmitRange = 30#グループ数：今は4Scenario.nrofHostGroups = 4## Group-specific settings:# グループID：グループ名，ホスト名として使う# groupID : Group's identifier. Used as the prefix of host names# グループ内のノード数# nrofHosts: number of hosts in the group# グループの移動モデル（movement package内のクラス名）# movementModel: movement model of the hosts (valid class name from movement package)# 待機時間？：目的地に着いてからどれくらい待機するかの最小値と最大値（バスとかの場合に便利か？）# waitTime: minimum and maximum wait times (seconds) after reaching destination# 最小速度と最大速度# speed: minimum and maximum speeds (m/s) when moving on a path# バッファサイズ# bufferSize: size of the message buffer (bytes)# ルーターの種類（routing package内のクラス名）# router: router used to route messages (valid class name from routing package)# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite## Group and movement model specific settings# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )#       for ShortestPathMapBasedMovement# okMaps : which map nodes are OK for the group (map file indexes), default=all #          for all MapBasedMovent models# routeFile: route's file path - for MapRouteMovement# routeType: route's type - for MapRouteMovement# Common settings for all groupsGroup.bufferSize = 500MGroup.waitTime = 0, 120# All nodes have the bluetooth interfaceGroup.nrofInterfaces = 1Group.interface1 = btInterface# Walking speedsGroup.speed = 3.5, 4.5# Message TTL of 300 minutes (5 hours)Group.msgTtl = 300Group.router = RBDRRouterGroup1.groupID = NormalGroup1.nrofHosts = 150Group1.movementModel = ModifiedRandomDirectionGroup2.groupID = Normal_badGroup2.nrofHosts = 70Group2.movementModel = ModifiedRandomDirectionWithSomeNormalGroup3.groupID = High_RepuGroup3.nrofHosts = 20Group3.movementModel = ModifiedRandomDirectionWithRangeGroup3.nodeLocation = 250,250Group3.MovingRange = 500,500Group3.waitTime = 0, 0Group4.groupID = AdjustGroup4.movementModel = AdjustingNodeMovementGroup4.nrofHosts = 1Group4.router = EpidemicRouterGroup4.waitTime = 0,0Group4.bufferSize = 1024M## Message creation parameters # How many event generatorsEvents.nrof = 1# Class of the first event generatorEvents1.class = MessageEventGenerator# (following settings are specific for the MessageEventGenerator class)# Creation interval in seconds (one new message every 25 to 35 seconds)Events1.interval = 25,35# Message sizes (500kB - 1MB)Events1.size = 500k,1M# range of message source/destination addressesEvents1.hosts = 0,238# Message ID prefixEvents1.prefix = Message## Movement model settings# seed for movement models' pseudo random number generator (default = 0)MovementModel.rngSeed = 1# World's size for Movement Models without implicit size (width, height; meters)MovementModel.worldSize = 4500, 3400# How long time to move hosts in the world before real simulationMovementModel.warmup = 1000## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 10# length of the warm up period (simulated seconds)Report.warmup = 0# default directory of reports (can be overridden per Report with output setting)Report.reportDir = reports/# Report classes to loadReport.report1 = ContactTimesReportReport.report2 = ConnectivityONEReportReport.report3 = MessageDelayReportReport.report4 = MessageDeliveryReportReport.report5 = MessageCopyCountReportMessageCopyCountReport.granularity = 300Report.report6 = MessageDeliveryReportFromHighReport.report7 = AdjacencyGraphvizReportReport.report8 = MessageGraphvizReportReport.report9 = MessageStatsReportReport.report10 = MessageStatsReportFromHigh## Default settings for some routers settingsProphetRouter.secondsInTimeUnit = 30SprayAndWaitRouter.nrofCopies = 6SprayAndWaitRouter.binaryMode = true## Optimization settings -- these affect the speed of the simulation## see World class for details.Optimization.cellSizeMult = 5Optimization.randomizeUpdateOrder = true## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$